// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class UserOperationEvent extends ethereum.Event {
  get params(): UserOperationEvent__Params {
    return new UserOperationEvent__Params(this);
  }
}

export class UserOperationEvent__Params {
  _event: UserOperationEvent;

  constructor(event: UserOperationEvent) {
    this._event = event;
  }

  get userOpHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get paymaster(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get success(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get actualGasCost(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get actualGasUsed(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class UserOperationRevertReason extends ethereum.Event {
  get params(): UserOperationRevertReason__Params {
    return new UserOperationRevertReason__Params(this);
  }
}

export class UserOperationRevertReason__Params {
  _event: UserOperationRevertReason;

  constructor(event: UserOperationRevertReason) {
    this._event = event;
  }

  get userOpHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get revertReason(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class AccountDeployed extends ethereum.Event {
  get params(): AccountDeployed__Params {
    return new AccountDeployed__Params(this);
  }
}

export class AccountDeployed__Params {
  _event: AccountDeployed;

  constructor(event: AccountDeployed) {
    this._event = event;
  }

  get userOpHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get factory(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get paymaster(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SignatureAggregatorChanged extends ethereum.Event {
  get params(): SignatureAggregatorChanged__Params {
    return new SignatureAggregatorChanged__Params(this);
  }
}

export class SignatureAggregatorChanged__Params {
  _event: SignatureAggregatorChanged;

  constructor(event: SignatureAggregatorChanged) {
    this._event = event;
  }

  get aggregator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class StakeLocked extends ethereum.Event {
  get params(): StakeLocked__Params {
    return new StakeLocked__Params(this);
  }
}

export class StakeLocked__Params {
  _event: StakeLocked;

  constructor(event: StakeLocked) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get totalStaked(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get unstakeDelaySec(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class StakeUnlocked extends ethereum.Event {
  get params(): StakeUnlocked__Params {
    return new StakeUnlocked__Params(this);
  }
}

export class StakeUnlocked__Params {
  _event: StakeUnlocked;

  constructor(event: StakeUnlocked) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StakeWithdrawn extends ethereum.Event {
  get params(): StakeWithdrawn__Params {
    return new StakeWithdrawn__Params(this);
  }
}

export class StakeWithdrawn__Params {
  _event: StakeWithdrawn;

  constructor(event: StakeWithdrawn) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EntryPoint extends ethereum.SmartContract {
  static bind(address: Address): EntryPoint {
    return new EntryPoint("EntryPoint", address);
  }
}
